# Copyright 2014 Ben Smith. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

chrome = /opt/google/chrome-unstable/google-chrome-unstable
nacl_sdk_root = out/nacl_sdk/pepper_canary
toolchain_dir = $nacl_sdk_root/toolchain
toolchain_dir_pnacl = $toolchain_dir/linux_pnacl
pnacl-ar = $toolchain_dir_pnacl/bin/pnacl-ar
pnacl-cc = $toolchain_dir_pnacl/bin/pnacl-clang
pnacl-cxx = $toolchain_dir_pnacl/bin/pnacl-clang++
pnacl-strip = $toolchain_dir_pnacl/bin/pnacl-strip
pnacl-finalize = $toolchain_dir_pnacl/bin/pnacl-finalize
pnacl-translate = $toolchain_dir_pnacl/bin/pnacl-translate
nmf = $nacl_sdk_root/tools/create_nmf.py
run-py = py/run.py

ccflags-default = -Wall -Wno-unused-value -Wno-long-long -Werror -pthread
ccflags-debug = -g -O0
ccflags-release = -g -O2 -DNDEBUG
ccflags-include = -I$nacl_sdk_root/include -Isrc/c -Iout/2nacl/gen

ldflags-default = -Lout/2nacl
ldflags-debug = -L$nacl_sdk_root/lib/pnacl/Debug
ldflags-release = -L$nacl_sdk_root/lib/pnacl/Release -O2
libs-default = -lnacl_io -lz -lppapi_cpp -lppapi

easy-template = py/easy_template.py
helper-py = py/helper.py
commands-py = py/commands.py
template-glue-c = py/templates/glue.c
template-glue-js = py/templates/glue.js
template-app-c = py/templates/app.c


rule cp
  command = cp $in $out
  description = COPY $out
rule cc
  command = $cc $ccflags -MMD -MF $out.d -c $in -o $out
  description = CC $out
  depfile = $out.d
rule ar
  command = rm -f $out && $ar rcs $out $in
  description = AR $out
rule link
  command = $cc $in $ldflags $libs -o $out
  description = LINK $out
rule finalize
  command = $pnacl-finalize $in -o $out
  description = FINALIZE $out
rule translate
  command = $pnacl-translate $in --allow-llvm-bitcode-input -arch $arch -o $
      $out
  description = TRANSLATE $arch $out
rule nmf
  command = $nmf $in -o $out
  description = NMF $out
rule template
  command = $easy-template -j $json $in > $out
  description = TEMPLATE $out
rule run
  pool = console
  command = $run-py -C $dir -P $page -p 0 -- $chrome --no-first-run --user-data-dir=user-data-dir
  description = RUN $page

subninja src/build.ninja
subninja examples/git/build.ninja
subninja examples/zip/build.ninja
subninja examples/zlib/build.ninja
