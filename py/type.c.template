/* Copyright 2014 Ben Smith. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <stdlib.h>

#include "{{name}}_type.h"

[[[
from helper import *
types = FixTypes(types, aliases, functions)
]]]

static const char* kTypeString[] = {
[[for _, type in types.no_builtins.iteritems():]]
  /* {{type.id}} */ "{{type}}",
[[for _, type in types.function_types.iteritems():]]
  /* {{type.id}} */ "{{type}}",
[[]]
};

const char* TypeToString(Type id) {
  if (id < NUM_BUILTIN_TYPES) {
    return BuiltinTypeToString(id);
  } else if (id >= NUM_TYPES) {
    return "<unknown>";
  } else {
    return kTypeString[id - NUM_BUILTIN_TYPES];
  }
}
