/* Copyright 2014 Ben Smith. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* DO NOT EDIT, this file is auto-generated from //py/templates/type.h */


#ifndef TYPE_H_
#define TYPE_H_

enum {
  TYPE_NONE = 0,
  TYPE_VOID = 1,
  TYPE_CHAR = 2,
  TYPE_INT8 = 3,
  TYPE_UINT8 = 4,
  TYPE_INT16 = 5,
  TYPE_UINT16 = 6,
  TYPE_INT32 = 7,
  TYPE_UINT32 = 8,
  TYPE_LONG = 9,
  TYPE_ULONG = 10,
  TYPE_INT64 = 11,
  TYPE_UINT64 = 12,
  TYPE_FLOAT32 = 13,
  TYPE_FLOAT64 = 14,
  TYPE_VOID_P = 15,
  TYPE_CHAR_P = 16,
  TYPE_INT8_P = 17,
  TYPE_UINT8_P = 18,
  TYPE_INT16_P = 19,
  TYPE_UINT16_P = 20,
  TYPE_INT32_P = 21,
  TYPE_UINT32_P = 22,
  TYPE_LONG_P = 23,
  TYPE_ULONG_P = 24,
  TYPE_INT64_P = 25,
  TYPE_UINT64_P = 26,
  TYPE_FLOAT32_P = 27,
  TYPE_FLOAT64_P = 28,
  TYPE_VOID_P_P = 29,
  TYPE_VAR = 30,
  TYPE_ARRAY_BUFFER = 31,
  TYPE_ARRAY = 32,
  TYPE_DICTIONARY = 33,
  TYPE_STRING = 34,
  TYPE_FUNC_GET_VOID_P = 35,
  TYPE_FUNC_GET_CHAR = 36,
  TYPE_FUNC_GET_INT8 = 37,
  TYPE_FUNC_GET_UINT8 = 38,
  TYPE_FUNC_GET_INT16 = 39,
  TYPE_FUNC_GET_UINT16 = 40,
  TYPE_FUNC_GET_INT32 = 41,
  TYPE_FUNC_GET_UINT32 = 42,
  TYPE_FUNC_GET_LONG = 43,
  TYPE_FUNC_GET_ULONG = 44,
  TYPE_FUNC_GET_INT64 = 45,
  TYPE_FUNC_GET_UINT64 = 46,
  TYPE_FUNC_GET_FLOAT32 = 47,
  TYPE_FUNC_GET_FLOAT64 = 48,
  TYPE_FUNC_SET_VOID_P = 49,
  TYPE_FUNC_SET_CHAR = 50,
  TYPE_FUNC_SET_INT8 = 51,
  TYPE_FUNC_SET_UINT8 = 52,
  TYPE_FUNC_SET_INT16 = 53,
  TYPE_FUNC_SET_UINT16 = 54,
  TYPE_FUNC_SET_INT32 = 55,
  TYPE_FUNC_SET_UINT32 = 56,
  TYPE_FUNC_SET_LONG = 57,
  TYPE_FUNC_SET_ULONG = 58,
  TYPE_FUNC_SET_INT64 = 59,
  TYPE_FUNC_SET_UINT64 = 60,
  TYPE_FUNC_SET_FLOAT32 = 61,
  TYPE_FUNC_SET_FLOAT64 = 62,
  TYPE_FUNC_ADD_VOID_P = 63,
  TYPE_FUNC_ADD_INT32 = 64,
  TYPE_FUNC_ADD_UINT32 = 65,
  TYPE_FUNC_ADD_INT64 = 66,
  TYPE_FUNC_ADD_UINT64 = 67,
  TYPE_FUNC_ADD_FLOAT32 = 68,
  TYPE_FUNC_ADD_FLOAT64 = 69,
  TYPE_FUNC_SUB_VOID_P = TYPE_FUNC_ADD_VOID_P,
  TYPE_FUNC_SUB_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_SUB_UINT32 = TYPE_FUNC_ADD_UINT32,
  TYPE_FUNC_SUB_INT64 = TYPE_FUNC_ADD_INT64,
  TYPE_FUNC_SUB_UINT64 = TYPE_FUNC_ADD_UINT64,
  TYPE_FUNC_SUB_FLOAT32 = TYPE_FUNC_ADD_FLOAT32,
  TYPE_FUNC_SUB_FLOAT64 = TYPE_FUNC_ADD_FLOAT64,
  TYPE_FUNC_LT_VOID_P = 70,
  TYPE_FUNC_LT_CHAR = 71,
  TYPE_FUNC_LT_INT8 = 72,
  TYPE_FUNC_LT_UINT8 = 73,
  TYPE_FUNC_LT_INT16 = 74,
  TYPE_FUNC_LT_UINT16 = 75,
  TYPE_FUNC_LT_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_LT_UINT32 = 76,
  TYPE_FUNC_LT_LONG = 77,
  TYPE_FUNC_LT_ULONG = 78,
  TYPE_FUNC_LT_INT64 = 79,
  TYPE_FUNC_LT_UINT64 = 80,
  TYPE_FUNC_LT_FLOAT32 = 81,
  TYPE_FUNC_LT_FLOAT64 = 82,
  TYPE_FUNC_LTE_VOID_P = TYPE_FUNC_LT_VOID_P,
  TYPE_FUNC_LTE_CHAR = TYPE_FUNC_LT_CHAR,
  TYPE_FUNC_LTE_INT8 = TYPE_FUNC_LT_INT8,
  TYPE_FUNC_LTE_UINT8 = TYPE_FUNC_LT_UINT8,
  TYPE_FUNC_LTE_INT16 = TYPE_FUNC_LT_INT16,
  TYPE_FUNC_LTE_UINT16 = TYPE_FUNC_LT_UINT16,
  TYPE_FUNC_LTE_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_LTE_UINT32 = TYPE_FUNC_LT_UINT32,
  TYPE_FUNC_LTE_LONG = TYPE_FUNC_LT_LONG,
  TYPE_FUNC_LTE_ULONG = TYPE_FUNC_LT_ULONG,
  TYPE_FUNC_LTE_INT64 = TYPE_FUNC_LT_INT64,
  TYPE_FUNC_LTE_UINT64 = TYPE_FUNC_LT_UINT64,
  TYPE_FUNC_LTE_FLOAT32 = TYPE_FUNC_LT_FLOAT32,
  TYPE_FUNC_LTE_FLOAT64 = TYPE_FUNC_LT_FLOAT64,
  TYPE_FUNC_GT_VOID_P = TYPE_FUNC_LT_VOID_P,
  TYPE_FUNC_GT_CHAR = TYPE_FUNC_LT_CHAR,
  TYPE_FUNC_GT_INT8 = TYPE_FUNC_LT_INT8,
  TYPE_FUNC_GT_UINT8 = TYPE_FUNC_LT_UINT8,
  TYPE_FUNC_GT_INT16 = TYPE_FUNC_LT_INT16,
  TYPE_FUNC_GT_UINT16 = TYPE_FUNC_LT_UINT16,
  TYPE_FUNC_GT_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_GT_UINT32 = TYPE_FUNC_LT_UINT32,
  TYPE_FUNC_GT_LONG = TYPE_FUNC_LT_LONG,
  TYPE_FUNC_GT_ULONG = TYPE_FUNC_LT_ULONG,
  TYPE_FUNC_GT_INT64 = TYPE_FUNC_LT_INT64,
  TYPE_FUNC_GT_UINT64 = TYPE_FUNC_LT_UINT64,
  TYPE_FUNC_GT_FLOAT32 = TYPE_FUNC_LT_FLOAT32,
  TYPE_FUNC_GT_FLOAT64 = TYPE_FUNC_LT_FLOAT64,
  TYPE_FUNC_GTE_VOID_P = TYPE_FUNC_LT_VOID_P,
  TYPE_FUNC_GTE_CHAR = TYPE_FUNC_LT_CHAR,
  TYPE_FUNC_GTE_INT8 = TYPE_FUNC_LT_INT8,
  TYPE_FUNC_GTE_UINT8 = TYPE_FUNC_LT_UINT8,
  TYPE_FUNC_GTE_INT16 = TYPE_FUNC_LT_INT16,
  TYPE_FUNC_GTE_UINT16 = TYPE_FUNC_LT_UINT16,
  TYPE_FUNC_GTE_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_GTE_UINT32 = TYPE_FUNC_LT_UINT32,
  TYPE_FUNC_GTE_LONG = TYPE_FUNC_LT_LONG,
  TYPE_FUNC_GTE_ULONG = TYPE_FUNC_LT_ULONG,
  TYPE_FUNC_GTE_INT64 = TYPE_FUNC_LT_INT64,
  TYPE_FUNC_GTE_UINT64 = TYPE_FUNC_LT_UINT64,
  TYPE_FUNC_GTE_FLOAT32 = TYPE_FUNC_LT_FLOAT32,
  TYPE_FUNC_GTE_FLOAT64 = TYPE_FUNC_LT_FLOAT64,
  TYPE_FUNC_EQ_VOID_P = TYPE_FUNC_LT_VOID_P,
  TYPE_FUNC_EQ_CHAR = TYPE_FUNC_LT_CHAR,
  TYPE_FUNC_EQ_INT8 = TYPE_FUNC_LT_INT8,
  TYPE_FUNC_EQ_UINT8 = TYPE_FUNC_LT_UINT8,
  TYPE_FUNC_EQ_INT16 = TYPE_FUNC_LT_INT16,
  TYPE_FUNC_EQ_UINT16 = TYPE_FUNC_LT_UINT16,
  TYPE_FUNC_EQ_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_EQ_UINT32 = TYPE_FUNC_LT_UINT32,
  TYPE_FUNC_EQ_LONG = TYPE_FUNC_LT_LONG,
  TYPE_FUNC_EQ_ULONG = TYPE_FUNC_LT_ULONG,
  TYPE_FUNC_EQ_INT64 = TYPE_FUNC_LT_INT64,
  TYPE_FUNC_EQ_UINT64 = TYPE_FUNC_LT_UINT64,
  TYPE_FUNC_EQ_FLOAT32 = TYPE_FUNC_LT_FLOAT32,
  TYPE_FUNC_EQ_FLOAT64 = TYPE_FUNC_LT_FLOAT64,
  TYPE_FUNC_NE_VOID_P = TYPE_FUNC_LT_VOID_P,
  TYPE_FUNC_NE_CHAR = TYPE_FUNC_LT_CHAR,
  TYPE_FUNC_NE_INT8 = TYPE_FUNC_LT_INT8,
  TYPE_FUNC_NE_UINT8 = TYPE_FUNC_LT_UINT8,
  TYPE_FUNC_NE_INT16 = TYPE_FUNC_LT_INT16,
  TYPE_FUNC_NE_UINT16 = TYPE_FUNC_LT_UINT16,
  TYPE_FUNC_NE_INT32 = TYPE_FUNC_ADD_INT32,
  TYPE_FUNC_NE_UINT32 = TYPE_FUNC_LT_UINT32,
  TYPE_FUNC_NE_LONG = TYPE_FUNC_LT_LONG,
  TYPE_FUNC_NE_ULONG = TYPE_FUNC_LT_ULONG,
  TYPE_FUNC_NE_INT64 = TYPE_FUNC_LT_INT64,
  TYPE_FUNC_NE_UINT64 = TYPE_FUNC_LT_UINT64,
  TYPE_FUNC_NE_FLOAT32 = TYPE_FUNC_LT_FLOAT32,
  TYPE_FUNC_NE_FLOAT64 = TYPE_FUNC_LT_FLOAT64,
  TYPE_FUNC_FREE = 83,
  TYPE_FUNC_MALLOC = 84,
  TYPE_FUNC_MEMSET = 85,
  TYPE_FUNC_MEMCPY = 86,
  TYPE_FUNC_STRLEN = 87,
  TYPE_FUNC_PUTS = 88,
  TYPE_FUNC_VAR_ADD_REF = 89,
  TYPE_FUNC_VAR_RELEASE = TYPE_FUNC_VAR_ADD_REF,
  TYPE_FUNC_VAR_FROM_UTF8 = 90,
  TYPE_FUNC_VAR_TO_UTF8 = 91,
  TYPE_FUNC_ARRAY_CREATE = 92,
  TYPE_FUNC_ARRAY_GET = 93,
  TYPE_FUNC_ARRAY_SET = 94,
  TYPE_FUNC_ARRAY_GET_LENGTH = 95,
  TYPE_FUNC_ARRAY_SET_LENGTH = 96,
  TYPE_FUNC_ARRAY_BUFFER_CREATE = 97,
  TYPE_FUNC_ARRAY_BUFFER_BYTE_LENGTH = 98,
  TYPE_FUNC_ARRAY_BUFFER_MAP = 99,
  TYPE_FUNC_ARRAY_BUFFER_UNMAP = 100,
  TYPE_FUNC_DICT_CREATE = 101,
  TYPE_FUNC_DICT_GET = 102,
  TYPE_FUNC_DICT_SET = 103,
  TYPE_FUNC_DICT_DELETE = 104,
  TYPE_FUNC_DICT_HAS_KEY = 105,
  NUM_BUILTIN_TYPES
};
typedef int32_t Type;

const char* BuiltinTypeToString(Type);
const char* TypeToString(Type);  // Defined in module.

#endif  // TYPE_H_

